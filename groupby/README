Please read this file by running the program. This file
is organized in following parts:

a) Code structure and algorithm explanation is divided into two parts: 
   * srcdir/CodeStructure.txt
   * Comments inside each class

b) Input assumptions
-> An input data file must follow the below format
aaaaaa bbbbbb
cccccc dddddd
......
The first element of every row is the key for that row, while
the second element is the value of that row.
All keys share the same length, and all values share
the same length as well.

-> Every key or value only contains lowercase ASCII characters.

-> Although the data can be larger than the memory size, we assume
that the size of all keys is smaller than the memory size. Thus,
we can cache all keys in the memory.

c) Output assumption:
In the output, we allow duplicated values for a key, and we will
not sort value strings.

d) Unit Test
cd srcdir; // the dir where src/ bin/ conf/ located
maven test

e) Compliation and execution dependencies
-> Java 1.8.0_05
-> Apache Maven 3.3.3

f) Compile
cd srcdir; // the dir where src/ bin/ conf/ located
maven compile
maven install

Note: if you want to disable the debug output, please change the org.mpi.groupby.util.Debug.debug to false

g) Generate test data
cd srcdir/target
java -cp ./groupby-1.0-SNAPSHOT.jar:../lib/* org.mpi.groupby.util.TestDataGenerator ../conf/config.xml 50

Note: this will generate a file named testData.txt under the same directory within roughly 50 mb size

g) Run with parameters
cd srcdir/target; // where the big jar file is located
java -cp ./groupby-1.0-SNAPSHOT.jar org.mpi.groupby.GroupByFactory dataFile.txt ../conf/config.xml
This command will output all keys and for each key a list of its value strings


